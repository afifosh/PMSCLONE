<?php

namespace Database\Seeders;

use App\Models\Company;
use App\Models\CompanyContactPerson;
use App\Models\CompanyInvitation;
use App\Models\Role as ModelsRole;
use App\Models\User;
use Illuminate\Database\Seeder;
use Spatie\Permission\Models\Role;

class CompanySeeder extends Seeder
{
  /**
   * Run the database seeds.
   *
   * @return void
   */
  public function run()
  {
    $staticData = [
      ['name' => 'Company 1', 'email' => 'company1@email.com', 'website' => 'www.google.com'], // Attribute which you have static
      ['name' => 'Company 2', 'email' => 'company2@email.com', 'website' => 'www.google2.com'] // Attribute which you have static
    ];

    foreach($staticData as $compAttrToOverride){
      Company::factory()->count(1)->create($compAttrToOverride)->each(function ($company) {// <------Create Company with static data, remaining data will be generated by factory
        User::factory()->count(2)->sequence(fn ($sequence) => [// <------Create 2 users for each company
          'email' => 'user' . $sequence->index + 1 . '@comp' . $company->id . '.com',
          'company_id' => $company->id
        ])->create()->each(function ($user) {// <------Assign roles to each user
          if (substr($user->email, 4, 2) == '1@') {
            $user->assignRole(Role::where('name', ModelsRole::COMPANY_ADMIN_ROLE)->first()->name);
          } else {
            $user->assignRole(Role::where('guard_name', 'web')->where('name', '!=', ModelsRole::COMPANY_ADMIN_ROLE)->inRandomOrder()->first());
          }
        });

        CompanyContactPerson::factory()->count(5)->create(['company_id' => $company->id])->each(function($contactPerson){// <------Create 5 contact persons for each company
          CompanyInvitation::factory()->count(1)->create(['invited_person_id' => $contactPerson->id]); // <------Create 1 invitation for each contact person
        });
        // Similarly you can create other models for each company just like above: CompanyContactPerson, CompanyInvitation, etc.
      });
    }
  }
}
